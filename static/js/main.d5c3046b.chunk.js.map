{"version":3,"sources":["INDflag.png","images/globe.png","CovidGif.gif","Bar.png","light_fever.gif","light_cough.gif","light_tiredness.gif","StayHomeStaySafe.gif","Covidmask.gif","Handsanitizer.gif","Socialdistance.gif","components/ProgressBar.js","components/TableComponent.js","components/AppHeader.js","container/RootContainer.js","routes/RootRouter.js","serviceWorker.js","index.js"],"names":["module","exports","ProgressBar","state","this","props","percent","text","Fragment","value","styles","path","stroke","fill","React","Component","useRowStyles","makeStyles","root","borderBottom","color","Row","row","useState","open","setOpen","classes","arr1","arr2","StatesAndDistrict","map","item","name","districts","item1","push","district","TableRow","className","TableCell","IconButton","aria-label","size","onClick","style","fontWeight","component","scope","confirmed","recovered","deaths","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","Table","TableHead","TableBody","distValue","i","key","deceased","StateAndDistrictsTable","stateDetails","stateAPI","setState","statewiseApi","json","arr","Object","keys","forEach","TableContainer","Paper","AppHeader","lastupdatedtime","lastupdated","console","log","Col","md","float","src","BarIcon","width","height","RootContainer","stateChange","event","selectState","target","stateWiseApi","global","countryTotal","loading","bind","fetch","method","redirect","then","response","result","Global","catch","error","total_values","state_wise","err","alt","Gif","id","class","type","disabled","role","aria-hidden","recPercent","descPercent","toFixed","worldRecPerecent","TotalRecovered","TotalConfirmed","worldDescPercent","TotalDeaths","span","offset","marginLeft","IndiaFlag","padding","onChange","StateList","code","Globe","NewConfirmed","NewRecovered","NewDeaths","LightFever","paddingLeft","LightCough","LightTired","marginTop","StaySafe","Mask","HandWash","Distance","textAlign","fontFamily","fontSize","RootRouter","Boolean","window","location","hostname","match","ReactDOM","render","locale","messages","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d5c3046b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/INDflag.e7de06ed.png\";","module.exports = __webpack_public_path__ + \"static/media/globe.bc03486b.png\";","module.exports = __webpack_public_path__ + \"static/media/CovidGif.e75b7930.gif\";","module.exports = __webpack_public_path__ + \"static/media/Bar.56312a37.png\";","module.exports = __webpack_public_path__ + \"static/media/light_fever.5d910371.gif\";","module.exports = __webpack_public_path__ + \"static/media/light_cough.03a257ec.gif\";","module.exports = __webpack_public_path__ + \"static/media/light_tiredness.d177c072.gif\";","module.exports = __webpack_public_path__ + \"static/media/StayHomeStaySafe.ba8b905e.gif\";","module.exports = __webpack_public_path__ + \"static/media/Covidmask.26555a00.gif\";","module.exports = __webpack_public_path__ + \"static/media/Handsanitizer.25bd201b.gif\";","module.exports = __webpack_public_path__ + \"static/media/Socialdistance.0dcb8563.gif\";","import React from 'react';\r\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nclass ProgressBar extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            \r\n        }\r\n        \r\n    }\r\n    render(){\r\n        const {percent,text}=this.props\r\n           return(\r\n            <React.Fragment>\r\n                {this.props.text==='Recovered' ?\r\n               <CircularProgressbarWithChildren value={percent} \r\n               styles={{ \r\n                   path:{\r\n                       stroke:'#008080',\r\n                   },\r\n               }}>\r\n                   <div>\r\n                   <strong>{percent}</strong>\r\n                   </div>\r\n                   <div>\r\n                   <strong>{text}</strong>\r\n                   </div>\r\n               </CircularProgressbarWithChildren> \r\n                 : <CircularProgressbarWithChildren value={percent} \r\n                 styles={{ \r\n                    path:{\r\n                        stroke:'#000000b0'\r\n                    },\r\n                    text:{\r\n                        fill:'#000000b0'\r\n                    }\r\n                }}\r\n                 >\r\n                    <div>\r\n                    <strong>{percent}</strong>\r\n                    </div>\r\n                    <div>\r\n                    <strong>{text}</strong>\r\n                    </div>\r\n                </CircularProgressbarWithChildren>\r\n                }     \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport StatesAndDistrict from '../constants/states.json';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n      color:'grey'\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n  var arr1=[],arr2=[]\r\n  StatesAndDistrict.map(function(item){\r\n    if(item.name===row.state){\r\n      item.districts.map(item1=>{\r\n         arr2.push(row.district[item1.name])\r\n         arr1.push(item1.name)\r\n      })\r\n    }\r\n  })\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell style={{color:\"black\",fontWeight:'600'}} component=\"th\" scope=\"row\">\r\n          {row.state}\r\n        </TableCell>\r\n        <TableCell style={{color:'salmon',fontWeight:'600'}}>{row.confirmed}</TableCell>\r\n        <TableCell style={{color:\"teal\",fontWeight:'600'}}>{row.recovered}</TableCell>\r\n        <TableCell style={{color:\"black\",fontWeight:'600'}}>{row.deaths}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography style={{fontWeight:'600'}} variant=\"h6\" gutterBottom component=\"div\">\r\n                Distrcits\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{color:\"black\",fontWeight:'600'}}>Location</TableCell>\r\n                    <TableCell style={{color:\"salmon\",fontWeight:'600'}}>Confirmed</TableCell>\r\n                    <TableCell style={{color:\"teal\",fontWeight:'600'}}>Recovered</TableCell>\r\n                    <TableCell style={{color:\"black\",fontWeight:'600'}}>Deceased</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {\r\n                    arr1.map((distValue,i)=>(\r\n                    <TableRow key={distValue}>\r\n                    <TableCell style={{color:\"black\",fontWeight:'600'}} component=\"th\" scope=\"row\">\r\n                      {distValue}\r\n                    </TableCell>\r\n                    <TableCell style={{color:'salmon',fontWeight:'600'}}>{arr2[i].confirmed}</TableCell>\r\n                    <TableCell style={{color:\"teal\",fontWeight:'600'}}>{arr2[i].recovered}</TableCell>\r\n                    <TableCell style={{color:\"black\",fontWeight:'600'}}>\r\n                      {arr2[i].deceased}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  ))\r\n                  }        \r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nclass StateAndDistrictsTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      stateDetails:'',\r\n      stateAPI:[]\r\n    }\r\n}\r\n  componentDidMount(){\r\n   this.setState({\r\n    stateDetails:this.props.statewiseApi\r\n   })\r\n}\r\n  render(){\r\n    var json=this.state.stateDetails;\r\n    var arr=[];\r\n    Object.keys(json).forEach(function(key){\r\n      arr.push(json[key])\r\n    })\r\n    \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell style={{color:\"black\",fontWeight:'600'}}>Location</TableCell>\r\n            <TableCell style={{color:\"salmon\",fontWeight:'600'}}>Confirmed</TableCell>\r\n            <TableCell style={{color:\"teal\",fontWeight:'600'}}>Recovered</TableCell>\r\n            <TableCell style={{color:\"black\",fontWeight:'600'}}>Deaths</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {arr.map((row) => (\r\n            <Row key={row.state} row={row}/>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n          }\r\n}\r\n\r\nexport default StateAndDistrictsTable;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport '../styles/style.css';\r\nimport BarIcon from '../Bar.png';\r\n\r\nclass AppHeader extends React.Component{\r\n\r\n    render(){\r\n        const lastupdatedtime=this.props.lastupdated\r\n        console.log(lastupdatedtime)\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"header\">\r\n                    <Row>\r\n                        <Col md={3} className=\"baricon\">\r\n                            <div style={{float:'left', paddingTop:'11px'}}><img src={BarIcon} width=\"35px\" height=\"38px\"/></div>\r\n                            <p className=\"covidFont\">Covid-19 Cases Overview</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col md={3} className=\"lastupdate\">\r\n                            <p>Last Updated: {lastupdatedtime}</p>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport { Row,Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport StateList from  '../constants/states.json';\r\nimport IndiaFlag from '../INDflag.png';\r\nimport Globe from '../images/globe.png';\r\nimport ProgressBar from '../components/ProgressBar';\r\nimport StateAndDistrictsTable from '../components/TableComponent';\r\nimport Gif from '../CovidGif.gif';\r\nimport AppHeader from '../components/AppHeader';\r\nimport LightFever from '../light_fever.gif';\r\nimport LightCough from '../light_cough.gif';\r\nimport LightTired from '../light_tiredness.gif';\r\nimport StaySafe from '../StayHomeStaySafe.gif';\r\nimport Mask from '../Covidmask.gif';\r\nimport HandWash from '../Handsanitizer.gif';\r\nimport Distance from '../Socialdistance.gif';\r\n\r\nclass RootContainer extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            global:'',\r\n            countryTotal:'',\r\n            stateWiseApi:'',\r\n            selectState:'Select',\r\n            stateDetails:'',\r\n            loading: true,\r\n        };\r\n        this.stateChange = this.stateChange.bind(this);\r\n    }\r\n\r\n    stateChange=event=>{\r\n        this.setState({\r\n            selectState: event.target.value,\r\n            stateDetails: this.state.stateWiseApi[event.target.value]\r\n        })\r\n    }\r\n    \r\n    componentDidMount(){\r\n      var requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n      };\r\n      \r\n      fetch(\"https://api.covid19api.com/summary\", requestOptions)\r\n      .then(response => response.json())\r\n        .then(result => this.setState({ global : result.Global}))\r\n        .catch(error => console.log('error', error));\r\n\r\n    fetch(\"https://corona-virus-world-and-india-data.p.rapidapi.com/api_india\", {\r\n\t\"method\": \"GET\",\r\n\t\"headers\": {\r\n\t\t\"x-rapidapi-host\": \"corona-virus-world-and-india-data.p.rapidapi.com\",\r\n\t\t\"x-rapidapi-key\": \"ba0842b536msh2d03d2ced35ffb3p1f60e5jsn794d97687977\"\r\n\t}})\r\n    .then(response => response.json())\r\n    .then(result => this.setState({ countryTotal: result.total_values, stateWiseApi: result.state_wise,loading :false  }))\r\n    .catch(err => {console.log(err)});\r\n\r\n     }\r\n    render(){\r\n        console.log(this.state.countryTotal.lastupdatedtime)\r\n        if(this.state.loading){\r\n            return(\r\n                <React.Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"logo\">\r\n                            <Row>\r\n                            <img alt=\"Covid Gif\" src={Gif} width=\"400\" height=\"400\"/>\r\n                            </Row>\r\n                            <Row id=\"spinner\">\r\n                            <button class=\"btn btn-primary\" type=\"button\" disabled>\r\n                            <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                             Loading...\r\n                            </button>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        else{\r\n        let recPercent=0,descPercent=0;\r\n        if(this.state.selectState==='Select'){\r\n            recPercent= ((this.state.countryTotal.recovered/this.state.countryTotal.confirmed)*100).toFixed(2)\r\n            descPercent= ((this.state.countryTotal.deaths/this.state.countryTotal.confirmed)*100).toFixed(2)\r\n        }\r\n        else{\r\n            recPercent= ((this.state.stateDetails.recovered/this.state.stateDetails.confirmed)*100).toFixed(2)\r\n            descPercent= ((this.state.stateDetails.deaths/this.state.stateDetails.confirmed)*100).toFixed(2)\r\n        }\r\n        const worldRecPerecent=((this.state.global.TotalRecovered/this.state.global.TotalConfirmed)*100).toFixed(2)\r\n        const worldDescPercent=((this.state.global.TotalDeaths/this.state.global.TotalConfirmed)*100).toFixed(2)\r\n        return(\r\n            \r\n            <React.Fragment>\r\n                <AppHeader lastupdated={this.state.countryTotal.lastupdatedtime}/>\r\n                <div className='overview'>\r\n                    <Row className=\"bgclr\">\r\n                        <Col md={{ span: 8, offset: 2 }} className=\"overviewDiv\">\r\n                            <div className=\"contentdiv\">\r\n                            <Row style={{paddingTop: '30px'}}>\r\n                              <Col md={6}>\r\n                                <div style={{marginLeft:'50px'}}>   \r\n                                <img src={IndiaFlag} alt=\"Indian Flag\" className=\"iconDetails\"/>\r\n                                </div>\r\n                                <div className=\"countryStyle\">\r\n                                <h2>India</h2>\r\n                                </div>                \r\n                              </Col>\r\n                           </Row>\r\n                           <Row>\r\n                               <Col md={4} style={{padding: '3px 52px'}}>\r\n                                   <select className=\"select\"\r\n                                        id=\"selectState\"\r\n                                        value={this.state.selectState}\r\n                                        onChange={this.stateChange}\r\n                                   >\r\n                                       <option value=\"Select\">Select States</option>\r\n                                       {StateList.map(state=>(\r\n                                           <option\r\n                                            key={state.code}\r\n                                            value={state.name}\r\n                                           >   \r\n                                            {state.name}\r\n                                           </option>\r\n                                       ))}\r\n                                   </select>\r\n                               </Col>\r\n                           </Row>\r\n                           <div className=\"casesFont\" style={{padding: '8px 44px'}}>\r\n                               {\r\n                                (this.state.selectState ==='Select') ?\r\n                            <Row> \r\n                                <Col>\r\n                                <p>Confirmed</p>\r\n                                <p className=\"confirmedDigit\">{this.state.countryTotal.confirmed}</p>\r\n                                </Col>\r\n                                <Col>\r\n                                <p>Recovered</p>\r\n                                <p className=\"recoveredDigit\">{this.state.countryTotal.recovered}</p>\r\n                                </Col>\r\n                                <Col>\r\n                                <p>Deceased</p>\r\n                                <p>{this.state.countryTotal.deaths}</p>\r\n                                </Col> \r\n                            </Row> : \r\n                            <Row> \r\n                                <Col>\r\n                                <p>Confirmed</p>\r\n                                <p className=\"confirmedDigit\">{this.state.stateDetails.confirmed}</p>\r\n                                </Col>\r\n                                <Col>\r\n                                <p>Recovered</p>\r\n                                <p className=\"recoveredDigit\">{this.state.stateDetails.recovered}</p>\r\n                                </Col>\r\n                                <Col>\r\n                                <p>Deceased</p>\r\n                                <p>{this.state.stateDetails.deaths}</p>\r\n                                </Col> \r\n                            </Row>\r\n                              }\r\n                            </div>\r\n                            <div className=\"progress_bar\">\r\n                            <Row className=\"progress_row\">\r\n                              <Col md={6} id='case_progress'>\r\n                              <ProgressBar percent={recPercent} text={'Recovered'}/>\r\n                              </Col>\r\n                              <Col md={6} id='case_progress'>\r\n                              <ProgressBar percent={descPercent} text={'Deceased'}/>\r\n                              </Col>\r\n                            </Row>  \r\n                            </div>\r\n                           </div>\r\n                           <div className=\"verticalLine\"></div>\r\n                           <div className=\"contentdiv2\">\r\n                           <Row>\r\n                              <Col md={8} className=\"worldStyle\">\r\n                                  <div>\r\n                                  <img src={Globe} alt=\"Worldwide\" className=\"iconDetails\"/>\r\n                                  </div>\r\n                                  <div style={{padding:'6px'}}>\r\n                                    <h3>Worldwide</h3>\r\n                                  </div>                              \r\n                              </Col>\r\n                            </Row>\r\n                            <div className=\"casesFont\">\r\n                            <Row>\r\n                               <Col>\r\n                                <p>Confirmed</p>\r\n                                <p className=\"confirmedDigit\">{this.state.global.TotalConfirmed}</p>\r\n                                <p><span id=\"upwards\" className=\"confirmedDigit\">&#8593;</span></p>\r\n                                <p id=\"digitSize\" className=\"confirmedDigit\">\r\n                                    {this.state.global.NewConfirmed}\r\n                                </p>\r\n                               </Col>\r\n                               <Col>\r\n                                <p>Recovered</p>\r\n                                <p className=\"recoveredDigit\">{this.state.global.TotalRecovered}</p>\r\n                                <p><span id=\"upwards\" className=\"recoveredDigit\">&#8593;</span></p>\r\n                                <p id=\"digitSize\" className=\"recoveredDigit\">{this.state.global.NewRecovered}</p>\r\n                               </Col>\r\n                               <Col>\r\n                                <p>Deceased</p>\r\n                                <p> {this.state.global.TotalDeaths}</p>\r\n                                <p><span id=\"upwards\">&#8593;</span></p>\r\n                                <p id=\"digitSize\">{this.state.global.NewDeaths}</p>\r\n                               </Col>\r\n                           </Row>\r\n                           </div>\r\n                           <div className='progress_bar2'>\r\n                            <Row>\r\n                              <Col md={6} id='case_progress'>\r\n                              <ProgressBar percent={worldRecPerecent} text={'Recovered'}/>\r\n                              </Col>\r\n                              <Col md={6} id='case_progress'>\r\n                              <ProgressBar percent={worldDescPercent} text={'Deceased'}/>\r\n                              </Col>\r\n                            </Row>  \r\n                            </div>\r\n                           </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"symptoms\"> \r\n                    <Row className=\"symFont\">\r\n                        <p>Symptoms</p>\r\n                    </Row>\r\n                    <Row className=\"symImage\">\r\n                        <div>\r\n                            <img src={LightFever} alt=\"Light Fever\" width=\"62px\" height=\"62px\"/>\r\n                            <p style={{paddingLeft:'10px'}} id=\"symText\">Fever</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src={LightCough} alt=\"Light Cough\" width=\"62px\" height=\"62px\"/>\r\n                            <p id=\"symText\">Dry Cough</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src={LightTired} alt=\"Light Tiredness\" width=\"62px\" height=\"62px\"/>\r\n                            <p id=\"symText\">Tiredness</p>\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n                <div>\r\n                    <div className='tableheading'>\r\n                        <br></br>\r\n                        <p id=\"tabletext\">All States/ Union Territories</p>   \r\n                        <br></br>  \r\n                    </div>\r\n                </div>\r\n                {this.state.stateWiseApi !==''?\r\n                <div className=\"tabledata\">\r\n                    <StateAndDistrictsTable statewiseApi={this.state.stateWiseApi}/>\r\n                </div> : ''}\r\n                <div className=\"symptoms\"> \r\n                    <Row className=\"symFont\">\r\n                        <p>Prevention</p>\r\n                    </Row>\r\n                    <Row className=\"symImage\" style={{marginTop:'-54px'}}>\r\n                        <div>\r\n                            <img src={StaySafe} alt=\"Stay Home Stay Safe\" width=\"300px\" height=\"300px\"/>\r\n                        </div>\r\n                    </Row>\r\n                    <div className=\"symptoms\"> \r\n                    <Row className=\"symImage\">\r\n                        <div>\r\n                            <img src={Mask} alt=\"Covid Mask\" width=\"100px\" height=\"100px\"/>\r\n                            <p style={{paddingLeft:'10px'}} id=\"symText\">Face Mask</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src={HandWash} alt=\"Hand Sanitizer\" width=\"100px\" height=\"100px\"/>\r\n                            <p id=\"symText\">Hand Wash</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src={Distance} alt=\"Social Distance\" width=\"100px\" height=\"100px\"/>\r\n                            <p id=\"symText\">Social Distance</p>\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <br></br>\r\n                    <div className=\"footer_info\">\r\n                        <p>Covid Tracker Version 1.0</p>\r\n                    </div>\r\n                    <div style={{textAlign:'center'}}>\r\n                        <p style={{fontFamily:'monospace'}}>By</p>\r\n                        <p style={{fontSize:'medium',fontWeight: '800'}}>Sumanth Vaka</p>\r\n                    </div>\r\n                    <br></br>\r\n                </div>\r\n            </React.Fragment>   \r\n        );\r\n    }\r\n}\r\n}\r\n\r\nexport default RootContainer;","import React from 'react';\r\n//import { BrowserRouter as  Route,Switch,Router} from 'react-router-dom';\r\nimport RootContainer from '../container/RootContainer';\r\n\r\nclass RootRouter extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n               <RootContainer/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RootRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { IntlProvider } from 'react-intl'\nimport RootRouter from './routes/RootRouter';\nimport { AppContainer } from 'react-hot-loader';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/style.css';\n\n\nReactDOM.render(\n  <React.Fragment>\n    <AppContainer>\n      <IntlProvider locale={'en'} messages={'en-US'}>\n      <RootRouter/>\n      </IntlProvider>\n    </AppContainer>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}